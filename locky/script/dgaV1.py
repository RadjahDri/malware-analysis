import datetime
import argparse 

#
# DGA from Locky sample 3a0d3a4cbed00926ad8c6d9a7f93e9d9
# Locky's DGA version 1
# Author: Adrien Coueron
#

class Config:
	def __init__(self, rotate, modulo, lang):
		self.rotate = rotate
		self.modulo = modulo
		self.lang = lang

def ror(n, dec):
    n &= 0xFFFFFFFF
    return ((n >> dec) | (n << (32-dec))) & 0xFFFFFFFF

def rol(n, dec):
    return ((n << dec) | (n >> (32-dec))) & 0xFFFFFFFF

if __name__ == "__main__":
	parser = argparse.ArgumentParser()
	parser.add_argument("-d", "--date", help="Date pour laquelle les domaines doivent etre generes")
	args = parser.parse_args()

	#Configuration du DGA du sample
	config = Config(5, 6, ['ru', 'pw', 'eu', 'in', 'yt', 'pm', 'us', 'fr', 'de', 'it', 'be', 'uk', 'nl', 'tf'])

	if args.date:
		d = datetime.datetime.strptime(args.date, "%d/%m/%Y")
	else:
		d = datetime.datetime.now()
	#Recuperation de la date pour chaque round
	day = d.day
	year = d.year
	month = d.month
	###

	#Generation des 6 domaines pour la date donnee
	for numDomaine in range(config.modulo):
		#Traitement sur les donnees de date et de configuration
		data = ror(0xB11924E1 * (year + 0x1BF5), config.rotate)
		data = ror(0xB11924E1*(day // 2 + data + 0x27100001), config.rotate)
		data = ror(0xB11924E1*(month + data + 0x2709A354), config.rotate)
		numDomaineMod = rol(numDomaine % config.modulo, 21)
		data = ror(0xB11924E1*(numDomaineMod + data + 0x27100001), config.rotate) + 0x27100001
		###
		#Choix de la longueur du nom de domaine
		length = (data % 11) + 5
		#Generation de chaque caractere
		domain = ""
		for i in range(length):
			data = (ror(0xB11924E1 * rol(data, i), config.rotate) + 0x27100001) & 0xFFFFFFFF
			domain += chr((data % 25) + ord('a'))
		###
		#Ajout du TLD
		domain += '.'
		numTld = ror(data * 0xB11924E1, config.rotate) + 0x27100001
		domain += config.lang[(numTld) % len(config.lang)]
		###

		print domain
